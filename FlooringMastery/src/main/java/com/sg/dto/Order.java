/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sg.dto;

import java.math.BigDecimal;

/**
 *
 * @author Ben Norman
 */
public class Order {

    // generated by dao, will be unqiue
    private int orderNumber;
    private String customerName;
    private int areaInSquareFeet;
    // calculated data
    private BigDecimal materialCost;
    private BigDecimal laborCost;
    private BigDecimal tax;
    private BigDecimal total;
    // the state the order was placed in/for
    private State state;
    // the product ordered
    private Product product;

    public State getState() {
        return state;
    }

    public void setState(State state) {
        this.state = state;
    }

    public Product getProduct() {
        return product;
    }

    public void setProduct(Product product) {
        this.product = product;
    }

    public int getOrderNumber() {
        return orderNumber;
    }

    public void setOrderNumber(int orderNumber) {
        this.orderNumber = orderNumber;
    }

    public String getCustomerName() {
        return customerName;
    }

    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    public int getAreaInSquareFeet() {
        return areaInSquareFeet;
    }

    public void setAreaInSquareFeet(int areaInSquareFeet) {
        this.areaInSquareFeet = areaInSquareFeet;
        repopCost();
    }

    public BigDecimal getMaterialCost() {
        if (materialCost == null) {
            materialCost = product.getCostPerSquareFoot().multiply(new BigDecimal(areaInSquareFeet));
        }
        return materialCost;
    }

    public BigDecimal getLaborCost() {
        if (laborCost == null) {
            laborCost = product.getLaborCostPerSquareFoot().multiply(new BigDecimal(areaInSquareFeet));
        }
        return laborCost;
    }

    public BigDecimal getTax() {
        if (tax == null) {
            tax = getMaterialCost().add(getLaborCost()).multiply(state.getTaxRate());
        }
        return tax;
    }

    public BigDecimal getTotal() {
        if (total == null) {
            total = getMaterialCost().add(getLaborCost()).add(getTax());
        }
        return total;
    }

    /**
     * used as a convenience method to reset order costs when the user changes
     * the amount (areaInSquareFeet) they want to order
     */
    private void repopCost() {
        materialCost = product.getCostPerSquareFoot().multiply(new BigDecimal(areaInSquareFeet));
        laborCost = product.getLaborCostPerSquareFoot().multiply(new BigDecimal(areaInSquareFeet));
        tax = getMaterialCost().add(getLaborCost()).multiply(state.getTaxRate());
        total = getMaterialCost().add(getLaborCost()).add(getTax());
    }
}
